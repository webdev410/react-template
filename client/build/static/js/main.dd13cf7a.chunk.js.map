{"version":3,"sources":["components/ThoughtList/index.js","utils/mutations.js","utils/queries.js","utils/auth.js","components/ThoughtForm/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentList/index.js","components/CommentForm/index.js","pages/SingleThought.js","pages/Profile.js","components/Header/Navbar.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["ThoughtList","thoughts","title","showTitle","showUsername","length","map","thought","className","to","thoughtAuthor","style","fontSize","createdAt","thoughtText","_id","LOGIN_USER","gql","ADD_USER","ADD_THOUGHT","ADD_COMMENT","QUERY_USER","QUERY_THOUGHTS","QUERY_SINGLE_THOUGHT","QUERY_ME","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","ThoughtForm","useState","setThoughtText","characterCount","setCharacterCount","useMutation","update","cache","addThought","data","readQuery","query","writeQuery","e","console","error","me","handleFormSubmit","event","a","preventDefault","variables","Auth","getProfile","username","loggedIn","onSubmit","name","placeholder","value","lineHeight","resize","onChange","target","type","message","Home","useQuery","loading","border","Signup","email","password","formState","setFormState","addUser","handleChange","log","login","cursor","Login","props","CommentList","comments","borderBottom","comment","commentAuthor","commentText","CommentForm","thoughtId","setCommentText","addComment","SingleThought","useParams","fontStyle","Profile","userParam","user","Navbar","onClick","logout","Header","Footer","useLocation","history","useHistory","pathname","goBack","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd13cf7a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ThoughtList = ({\n\tthoughts,\n\ttitle,\n\tshowTitle = true,\n\tshowUsername = true,\n}) => {\n\tif (!thoughts.length) {\n\t\treturn (\n\t\t\t<h3 className=\"text-center bg-danger text-light\">\n\t\t\t\tNo Thoughts Yet\n\t\t\t</h3>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{showTitle && <h3>{title}</h3>}\n\t\t\t{thoughts &&\n\t\t\t\tthoughts.map((thought) => (\n\t\t\t\t\t<div key={thought._id} className=\"card mb-3\">\n\t\t\t\t\t\t<h4 className=\"card-header bg-primary text-light p-2 m-0\">\n\t\t\t\t\t\t\t{showUsername ? (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tclassName=\"text-light\"\n\t\t\t\t\t\t\t\t\tto={`/profiles/${thought.thoughtAuthor}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{thought.thoughtAuthor} <br />\n\t\t\t\t\t\t\t\t\t<span style={{ fontSize: \"1rem\" }}>\n\t\t\t\t\t\t\t\t\t\thad this thought on {thought.createdAt}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<span style={{ fontSize: \"1rem\" }}>\n\t\t\t\t\t\t\t\t\t\tYou had this thought on{\" \"}\n\t\t\t\t\t\t\t\t\t\t{thought.createdAt}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<div className=\"card-body bg-light p-2\">\n\t\t\t\t\t\t\t<p>{thought.thoughtText}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-block btn-squared\"\n\t\t\t\t\t\t\tto={`/thoughts/${thought._id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tJoin the discussion on this thought.\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ThoughtList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($thoughtId: ID!, $commentText: String!) {\n    addComment(thoughtId: $thoughtId, commentText: $commentText) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        createdAt\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHTS = gql`\n  query getThoughts {\n    thoughts {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_THOUGHT = gql`\n  query getSingleThought($thoughtId: ID!) {\n    thought(thoughtId: $thoughtId) {\n      _id\n      thoughtText\n      thoughtAuthor\n      createdAt\n      comments {\n        _id\n        commentText\n        commentAuthor\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      thoughts {\n        _id\n        thoughtText\n        thoughtAuthor\n        createdAt\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_THOUGHT } from \"../../utils/mutations\";\nimport { QUERY_THOUGHTS, QUERY_ME } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\n\nconst ThoughtForm = () => {\n\tconst [thoughtText, setThoughtText] = useState(\"\");\n\n\tconst [characterCount, setCharacterCount] = useState(0);\n\n\tconst [addThought, { error }] = useMutation(ADD_THOUGHT, {\n\t\tupdate(cache, { data: { addThought } }) {\n\t\t\ttry {\n\t\t\t\tconst { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n\t\t\t\tcache.writeQuery({\n\t\t\t\t\tquery: QUERY_THOUGHTS,\n\t\t\t\t\tdata: { thoughts: [addThought, ...thoughts] },\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\n\t\t\t// update me object's cache\n\t\t\tconst { me } = cache.readQuery({ query: QUERY_ME });\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: QUERY_ME,\n\t\t\t\tdata: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n\t\t\t});\n\t\t},\n\t});\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst { data } = await addThought({\n\t\t\t\tvariables: {\n\t\t\t\t\tthoughtText,\n\t\t\t\t\tthoughtAuthor: Auth.getProfile().data.username,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tsetThoughtText(\"\");\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\n\t\tif (name === \"thoughtText\" && value.length <= 280) {\n\t\t\tsetThoughtText(value);\n\t\t\tsetCharacterCount(value.length);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>What's on your techy mind?</h3>\n\n\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t<>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={`m-0 ${\n\t\t\t\t\t\t\tcharacterCount === 280 || error ? \"text-danger\" : \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\tCharacter Count: {characterCount}/280\n\t\t\t\t\t</p>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"flex-row justify-center justify-space-between-md align-center\"\n\t\t\t\t\t\tonSubmit={handleFormSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"col-12 col-lg-9\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tname=\"thoughtText\"\n\t\t\t\t\t\t\t\tplaceholder=\"Here's a new thought...\"\n\t\t\t\t\t\t\t\tvalue={thoughtText}\n\t\t\t\t\t\t\t\tclassName=\"form-input w-100\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tlineHeight: \"1.5\",\n\t\t\t\t\t\t\t\t\tresize: \"vertical\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"col-12 col-lg-3\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-block py-3\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd Thought\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t<div className=\"col-12 my-3 bg-danger text-white p-3\">\n\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<p>\n\t\t\t\t\tYou need to be logged in to share your thoughts. Please{\" \"}\n\t\t\t\t\t<Link to=\"/login\">login</Link> or{\" \"}\n\t\t\t\t\t<Link to=\"/signup\">signup.</Link>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ThoughtForm;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ThoughtList from \"../components/ThoughtList\";\nimport ThoughtForm from \"../components/ThoughtForm\";\n\nimport { QUERY_THOUGHTS } from \"../utils/queries\";\n\nconst Home = () => {\n\tconst { loading, data } = useQuery(QUERY_THOUGHTS);\n\tconst thoughts = data?.thoughts || [];\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"d-flex flex-column align-items-center\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"col-12 col-md-10 mb-3 p-3\"\n\t\t\t\t\tstyle={{ border: \"1px dotted #1a1a1a\" }}\n\t\t\t\t>\n\t\t\t\t\t<ThoughtForm />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 col-md-8 mb-3\">\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ThoughtList\n\t\t\t\t\t\t\tthoughts={thoughts}\n\t\t\t\t\t\t\ttitle=\"Some Feed for Thought(s)...\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n\tconst [formState, setFormState] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\tconst [addUser, { error, data }] = useMutation(ADD_USER);\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(formState);\n\n\t\ttry {\n\t\t\tconst { data } = await addUser({\n\t\t\t\tvariables: { ...formState },\n\t\t\t});\n\n\t\t\tAuth.login(data.addUser.token);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t};\n\n\treturn (\n\t\t<main className=\"d-flex justify-content-center mb-4\">\n\t\t\t<div className=\"col-12 col-lg-6\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<h4 className=\"card-header bg-dark text-light p-2\">\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</h4>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t{data ? (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tSuccess! You may now head{\" \"}\n\t\t\t\t\t\t\t\t<Link to=\"/\">back to the homepage.</Link>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mb-1\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your username\"\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={formState.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mb-1\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tvalue={formState.email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mb-1\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"******\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block btn-primary\"\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t<div className=\"my-3 p-3 bg-danger text-white\">\n\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Login = (props) => {\n\tconst [formState, setFormState] = useState({ email: \"\", password: \"\" });\n\tconst [login, { error, data }] = useMutation(LOGIN_USER);\n\n\t// update state based on form input changes\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetFormState({\n\t\t\t...formState,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\t// submit form\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(formState);\n\t\ttry {\n\t\t\tconst { data } = await login({\n\t\t\t\tvariables: { ...formState },\n\t\t\t});\n\n\t\t\tAuth.login(data.login.token);\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\t// clear form values\n\t\tsetFormState({\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<main className=\"d-flex justify-content-center mb-4\">\n\t\t\t<div className=\"col-12 col-lg-6\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<h4 className=\"card-header bg-dark text-light p-2\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</h4>\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t{data ? (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tSuccess! You may now head{\" \"}\n\t\t\t\t\t\t\t\t<Link to=\"/\">back to the homepage.</Link>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mb-1\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Your email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tvalue={formState.email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"form-control mb-1\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"******\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-block btn-primary\"\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t<div className=\"my-3 p-3 bg-danger text-white\">\n\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default Login;\n","import React from 'react';\n\nconst CommentList = ({ comments = [] }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n\n  return (\n    <>\n      <h3\n        className=\"p-5 display-inline-block\"\n        style={{ borderBottom: '1px dotted #1a1a1a' }}\n      >\n        Comments\n      </h3>\n      <div className=\"flex-row my-4\">\n        {comments &&\n          comments.map((comment) => (\n            <div key={comment._id} className=\"col-12 mb-3 pb-3\">\n              <div className=\"p-3 bg-dark text-light\">\n                <h5 className=\"card-header\">\n                  {comment.commentAuthor} commented{' '}\n                  <span style={{ fontSize: '0.825rem' }}>\n                    on {comment.createdAt}\n                  </span>\n                </h5>\n                <p className=\"card-body\">{comment.commentText}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default CommentList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\n\nconst SingleThought = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { thoughtId: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this thought on {thought.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <CommentList comments={thought.comments} />\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport ThoughtForm from \"../components/ThoughtForm\";\nimport ThoughtList from \"../components/ThoughtList\";\n\nimport { QUERY_USER, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = () => {\n\tconst { username: userParam } = useParams();\n\n\tconst { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n\t\tvariables: { username: userParam },\n\t});\n\n\tconst user = data?.me || data?.user || {};\n\t// redirect to personal profile page if username is yours\n\tif (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n\t\treturn <Redirect to=\"/me\" />;\n\t}\n\n\tif (loading) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\tif (!user?.username) {\n\t\treturn (\n\t\t\t<h4>\n\t\t\t\tYou need to be logged in to see this. Use the navigation links\n\t\t\t\tabove to sign up or log in!\n\t\t\t</h4>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"d-flex justify-content-center mb-3\">\n\t\t\t\t<h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n\t\t\t\t\tViewing {userParam ? `${user.username}'s` : \"your\"} profile.\n\t\t\t\t</h2>\n\n\t\t\t\t<div className=\"col-12 col-md-10 mb-5\">\n\t\t\t\t\t<ThoughtList\n\t\t\t\t\t\tthoughts={user.thoughts}\n\t\t\t\t\t\ttitle={`${user.username}'s thoughts...`}\n\t\t\t\t\t\tshowTitle={false}\n\t\t\t\t\t\tshowUsername={false}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{!userParam && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"col-12 col-md-10 mb-3 p-3\"\n\t\t\t\t\t\tstyle={{ border: \"1px dotted #1a1a1a\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ThoughtForm />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../../utils/auth\";\n\nfunction Navbar() {\n\tconst logout = (event) => {\n\t\tevent.preventDefault();\n\t\tAuth.logout();\n\t};\n\treturn (\n\t\t<div className=\"container-fluid justify-space-between \">\n\t\t\t<div className=\"nav navbar\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link className=\"site-title\" to=\"/\">\n\t\t\t\t\t\t<h1 className=\"m-0 \">Site Title</h1>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<p className=\"m-0\">Official slogan of this website!</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Link className=\"nav-link m-2\" to=\"/me\">\n\t\t\t\t\t\t\t\t{Auth.getProfile().data.username}'s profile\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<button className=\"nav-link m-2\" onClick={logout}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Link className=\"nav-link m-2\" to=\"/login\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link className=\"nav-link m-2\" to=\"/signup\">\n\t\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport Navbar from \"./Navbar\";\n\nconst Header = () => {\n\treturn (\n\t\t<header className=\"mb-4 py-3 flex-row align-center\">\n\t\t\t<Navbar />\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst Footer = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\treturn (\n\t\t<footer className=\"w-100 p-3\">\n\t\t\t<div className=\"container text-center mb-5\">\n\t\t\t\t{location.pathname !== \"/\" && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-dark mb-3\"\n\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t>\n\t\t\t\t\t\t&larr; Go Back\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t<h4>\n\t\t\t\t\tMade with{\" \"}\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"emoji\"\n\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\taria-label=\"heart\"\n\t\t\t\t\t\taria-hidden=\"false\"\n\t\t\t\t\t>\n\t\t\t\t\t\t❤️\n\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\tby the Tech Thoughts team.\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./css/app.css\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport SingleThought from \"./pages/SingleThought\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n\turi: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n\t// get the authentication token from local storage if it exists\n\tconst token = localStorage.getItem(\"id_token\");\n\t// return the headers to the context so httpLink can read them\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : \"\",\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\t// Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div className=\"d-flex flex-column justify-content-start vh100\">\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/login\">\n\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/signup\">\n\t\t\t\t\t\t\t<Signup />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/me\">\n\t\t\t\t\t\t\t<Profile />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/profiles/:username\">\n\t\t\t\t\t\t\t<Profile />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/thoughts/:thoughtId\">\n\t\t\t\t\t\t\t<SingleThought />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/bootstrap.css\";\n// import \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}